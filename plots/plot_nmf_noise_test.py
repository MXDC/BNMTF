"""
Plot the performances of the many different NMF algorithms in a single graph.

We plot the average performance across all 10 attempts for different fractions:
[0.1, 0.2, ..., 0.9].

We use a dataset of I=100, J=80, K=10, with unit mean priors and zero mean unit
variance noise.

We have the following methods:
- VB NMF
- Gibbs NMF

"""

import matplotlib.pyplot as plt
metrics = ['MSE','R^2','Rp']

noise_ratios = [ 0, 0.01, 0.05, 0.1, 0.2, 0.5, 1. ]

# VB NMF
vb_all_performances = {'R^2': [[0.9999999549332508, 0.999999904885915, 0.999999817783978, 0.999999979138143, 0.9999999474198323, 0.9999999694400835, 0.9999999834809596, 0.9999999823358431, 0.9999996133002866, 0.9999999770507794], [0.9849627395198031, 0.9864381787765951, 0.9867679041561732, 0.9871932579082453, 0.9850915707653997, 0.9854969206362098, 0.9891138184331488, 0.9867899288682696, 0.9876279762854675, 0.9867680469881884], [0.941353569785272, 0.9355957530924336, 0.9294551311318793, 0.943074921770021, 0.931340311719775, 0.9384670890206103, 0.9405999303293585, 0.9375661015613784, 0.9233730235952935, 0.9188262874236086], [0.8874856636123989, 0.8733324350410653, 0.8773632444696763, 0.8865270597457613, 0.8723799730795367, 0.8641310375813999, 0.8837293050487771, 0.8757755840222915, 0.8891228584614231, 0.8752011030227372], [0.7761176019632071, 0.7916926428614209, 0.7797247548415855, 0.8087231667501644, 0.7758591543521262, 0.7759859363590513, 0.7708213253468608, 0.7857956754838404, 0.7831797765460526, 0.8052727682561247], [0.5437758804282625, 0.6152319198009373, 0.5959083130331708, 0.6138787082128204, 0.5647238868105593, 0.5840966692652938, 0.5726035611407931, 0.5936414696274798, 0.5449193937007886, 0.6049986012270756], [0.4141746136823119, 0.398915474642492, 0.3909465251966805, 0.35511596546414315, 0.3911377428098317, 0.39001934282594686, 0.392432508213599, 0.38380352885076996, 0.3234048730251119, 0.43606908046880766]], 'MSE': [[1.49349680226629e-06, 3.2288628422069126e-06, 6.6835938719945685e-06, 8.1825180808357987e-07, 2.1276038914595764e-06, 1.1939940710388033e-06, 5.9153918144689819e-07, 5.776024221480372e-07, 1.4862246568155412e-05, 1.0275443457788901e-06], [0.49523354509260253, 0.50648759714348424, 0.4847044964164835, 0.54449676380626211, 0.53904058591279846, 0.46607817215881431, 0.47508501652750523, 0.50733775225159716, 0.5101966654711394, 0.51201475277549913], [2.4333805600053657, 2.6065455482944508, 2.7457345855116442, 2.679006317581019, 2.5311866071980131, 2.5925204248467084, 2.5122008776588034, 2.4122655475428356, 2.7902187714289419, 2.7834626880417157], [5.0240498915378833, 5.0012188783498353, 5.4635185036132636, 4.3712868922397865, 5.2394523351657583, 5.1732331416304396, 4.7106294980114569, 4.7830348546687471, 5.0744116446102234, 5.3616368032600699], [9.7240166124382998, 9.4396275721476144, 9.167377129588191, 8.8327215161894745, 9.1506551447404689, 9.6850005226373828, 9.8246062595266963, 10.186230657803707, 9.089441036811623, 10.354654981925069], [23.848397770086844, 22.697370393419391, 20.387459031612067, 24.356006531652085, 24.196879223165443, 25.061255575483692, 24.137762612531887, 23.854884209784316, 24.003809249684537, 23.542226611505885], [46.78424378212668, 45.790371652822017, 44.933350394620014, 45.5312314951614, 45.603914916878374, 45.741615123510016, 47.083177430377809, 49.787110903958485, 52.386996752119124, 47.442716091216013]], 'Rp': [[0.99999997747839575, 0.99999995296405753, 0.99999990985609233, 0.99999998960628778, 0.99999997394584939, 0.99999998473751128, 0.99999999176145682, 0.99999999118737182, 0.99999980804361599, 0.99999998856197736], [0.99248386235276098, 0.99320337136594572, 0.99337612825461785, 0.99362433918521043, 0.99251962549009964, 0.99277617279670205, 0.99456808604047731, 0.9933742682844986, 0.99379761755727902, 0.99339898326473974], [0.97036237832924943, 0.96727066139620799, 0.9643344409932153, 0.97123599034831742, 0.96534472656054959, 0.96879903373414555, 0.96986924121505291, 0.96842234884274492, 0.96122847617049789, 0.95874758901968815], [0.94214072231702073, 0.93454371140072967, 0.9368315254747438, 0.94179411383794764, 0.93402672283094001, 0.9299400371656108, 0.94007208623557759, 0.93614158279056447, 0.94305876242440756, 0.93576878916461426], [0.88156192509763098, 0.89002998680679835, 0.88304390625749463, 0.90025076238785218, 0.88105087419577821, 0.88157548550690157, 0.87955230410955332, 0.88655974206802357, 0.88520761412991655, 0.89775664199853544], [0.73868609174204802, 0.78480690209143777, 0.77270963036741458, 0.78363550345943001, 0.75153914676224942, 0.76667425300034575, 0.7584635559233599, 0.77185300036223681, 0.73976244331788854, 0.77855175780932606], [0.64422906454464968, 0.63471374891537835, 0.63132157207359429, 0.60277633319977897, 0.63239397534274089, 0.63039871659694002, 0.63202598925460884, 0.62372093802046991, 0.57818897632203181, 0.66139101462845751]]} 
vb_average_performances = {'R^2': [0.99999991297690705, 0.98662503423375014, 0.933965211942963, 0.8785048264085068, 0.78531728027604353, 0.58337784032471807, 0.38760196551796949], 'MSE': [3.2604735804578965e-06, 0.50406753475561861, 2.6086521928109501, 5.0202472443087469, 9.5454331433808512, 23.608605120892616, 47.108472854278993], 'Rp': [0.99999995681426168, 0.99331224545923313, 0.96656148866096692, 0.93743180536421566, 0.88665892425584847, 0.76466822848357363, 0.62711603288986506]}

# Gibbs NMF
gibbs_all_performances = {'R^2': [[0.9999998377248324, 0.9999998526396529, 0.9999996392823713, 0.9999998419005306, 0.9999998355463068, 0.9999997566539418, 0.9999991584098941, 0.9999997945532414, 0.9999995738252017, 0.9999997235535426], [0.9864180179005182, 0.9852956435232663, 0.9849159932466086, 0.9864248073073594, 0.9874258267995951, 0.9881641137391173, 0.9877880407807237, 0.9856205440783705, 0.9855547782622343, 0.9852649644552776], [0.9468538217372606, 0.9335836831976849, 0.9365364210665719, 0.9343385660267437, 0.9334372912746021, 0.9360011157759967, 0.9422267949594857, 0.9373625522304547, 0.9392159004086809, 0.9210961333867389], [0.8878446554622367, 0.8689689150599291, 0.8755237239757949, 0.8893266832201753, 0.8955136017702174, 0.8798262187470341, 0.8757643605094142, 0.878480201387089, 0.8774462392631708, 0.8845252453477507], [0.7991285371564745, 0.7543989929065431, 0.7791692632691517, 0.8208753483143414, 0.8113395105957701, 0.7950068440141685, 0.7255237781475996, 0.7926804748991783, 0.8028028020044367, 0.7867970565502109], [0.5521695229916497, 0.6018612744049784, 0.5727977813079224, 0.6009730286994108, 0.5920304109104155, 0.5973987310852036, 0.5734092041225893, 0.5594458867593188, 0.5230568028356666, 0.5837190716695092], [0.37884196298804995, 0.41897833395151185, 0.3962185884303252, 0.33557325025267426, 0.36519549189112566, 0.4311569764353861, 0.4299319547876528, 0.33463818502859544, 0.3740839388230387, 0.34255988908207]], 'MSE': [[6.086932313892361e-06, 5.3013871832448336e-06, 1.2715760196423114e-05, 5.5517525127149708e-06, 7.0617024520559843e-06, 9.5667098908757443e-06, 2.9769416082284975e-05, 7.1617148016423341e-06, 1.642394956228756e-05, 1.1091772653404568e-05], [0.47795132722584488, 0.53311005019183166, 0.54686545431145073, 0.5775397331128459, 0.54841240849816275, 0.49901469364187556, 0.49763182557357671, 0.55515433104668721, 0.52435967514640258, 0.53191102618528496], [2.6810632549367357, 2.4962411084045928, 2.5109858569509371, 2.6757405074475629, 2.6425836300113548, 2.5280119793785145, 2.6932392586443008, 2.4090639498703101, 2.4034780658269712, 2.6080480214879396], [4.9372495958994982, 5.3800913683680669, 5.1992083463625614, 4.8763273982497983, 4.6832533748890022, 4.900187465448802, 5.2270134700439135, 5.2290427808340185, 5.1109705527051883, 4.974180215751379], [8.9709447285851258, 9.5546049515563887, 9.7216433035602048, 8.725407596812742, 8.9881086615971348, 10.298153466274211, 9.660768363345257, 9.4486918174296637, 10.076342741573946, 10.099165773917726], [23.792286436308274, 24.925540185964348, 23.877087242319178, 24.585724915037162, 23.559500095879361, 23.399184626309491, 23.774256117936542, 24.557740177982414, 26.694170441931924, 24.241585152406874], [49.351370314195009, 46.772851959567731, 46.505490365330573, 48.543213509776585, 46.795135858432943, 45.205797388673155, 50.609756208181054, 48.48203581318802, 46.774692225023642, 51.286875236364537]], 'Rp': [[0.99999991902951313, 0.9999999263996322, 0.99999982243463814, 0.99999992110175673, 0.99999991908628483, 0.99999987840894433, 0.99999958106715359, 0.99999989778984721, 0.9999997874632347, 0.99999986252358875], [0.99321589050707582, 0.99265288977492128, 0.99247541895081448, 0.99321335125050225, 0.99373000972163483, 0.99406684153233082, 0.99388275721435426, 0.99281436487303054, 0.99293546373976083, 0.99266364093597725], [0.97322142296802783, 0.96651583640162664, 0.96833361646564631, 0.96739568499058659, 0.96657842815395056, 0.96797903585135425, 0.97133769530628933, 0.96821606787050751, 0.96973298183213552, 0.95991833619681366], [0.94273832380772582, 0.93298678563737669, 0.93659101534975664, 0.94315123447511096, 0.94741285787850904, 0.93877219540246415, 0.93669797984383718, 0.93784751309273862, 0.93781768844310076, 0.94143671009013752], [0.89574683110309294, 0.86964168624674509, 0.88383118934902916, 0.90691334844656346, 0.9018317889733124, 0.89211077509348313, 0.855917679058391, 0.89311053164528031, 0.89839796324034682, 0.8884067392583922], [0.7451468389411926, 0.77710656393177135, 0.75879714010076027, 0.77719333830475934, 0.76946461714365944, 0.77355053015466191, 0.7585718633194336, 0.75487313979673631, 0.7258426786052401, 0.76477935764554617], [0.62452570428979737, 0.65221333691020733, 0.63675130911643796, 0.58999539911361021, 0.61266357821575923, 0.66171738900722543, 0.65870373624757683, 0.5876164112010851, 0.61453309829746783, 0.5864654735490662]]} 
gibbs_average_performances = {'R^2': [0.99999970140895156, 0.98628727300930696, 0.93606522800642189, 0.88132198447428123, 0.78677226078578744, 0.5756861714786663, 0.38071785716704298], 'MSE': [1.1073109764882646e-05, 0.52919505249339616, 2.5648455632959215, 5.0517524568552234, 9.5543831404652391, 24.34070753920756, 48.032721887873329], 'Rp': [0.99999985153045956, 0.99316506285004036, 0.96792291060369384, 0.93954523040207572, 0.8885908532414637, 0.76053260679437606, 0.62251854359482339]}


# Assemble the average performances and method names
methods = ['VB-NMF','G-NMF']
avr_performances = [
    vb_average_performances,
    gibbs_average_performances
]

for metric in metrics:
    plt.figure()
    #plt.title("Performances (%s) for different noise ratios" % metric)
    plt.xlabel("Noise to signal ratio", fontsize=16)
    plt.ylabel(metric, fontsize=16)
    
    x = noise_ratios
    for method, avr_performance in zip(methods,avr_performances):
        y = avr_performance[metric]
        #plt.plot(x,y,label=method)
        plt.plot(x,y,linestyle='-', marker='o', label=method)
    plt.legend(loc=0)  